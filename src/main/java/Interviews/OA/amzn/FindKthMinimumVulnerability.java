package Interviews.OA.amzn;

import java.util.*;

public class FindKthMinimumVulnerability {
    public static void main(String[] args) {
        int[] vulnerability = {1, 3, 2, 1}; // 1,2,3,4,5,6 {2, 6 -> 5} {3, 6 -> 4}
        FindKthMinimumVulnerability obj = new FindKthMinimumVulnerability();

        // There are 2 contiguous groups of m = 3 servers: [1, 3, 2] and [3, 2, 1].
        // The k = 2nd lowest vulnerability in each group is 2
        // Return the answers for each group, in order: [2, 2]
        System.out.println(Arrays.toString(obj.findKthMinimumVulnerability(vulnerability, 3, 2)));

        vulnerability = new int[]{4, 2, 3, 1, 1};
        // The first group of servers is [4, 2, 3, 1] or [1, 2, 3, 4] when sorted. The 3rd minimum vulnerability is 3.
        // The second group of servers is [2, 3, 1, 1], or [1, 1, 2, 3] when sorted. The 3rd minimum vulnerability is 2.
        System.out.println(Arrays.toString(obj.findKthMinimumVulnerability(vulnerability, 4, 3)));
        obj.findKthMinimumVulnerability(vulnerability, 4, 3);


    }

    public int[] findKthMinimumVulnerability(int[] vulnerability, int m, int k) {
        int totalPossible = vulnerability.length - m + 1;
        int[] res = new int[totalPossible];

        List<Integer> list = new ArrayList<>();

        for (int i=0; i < vulnerability.length - m + 1; i++) {

            int kTemp = 0;
            while (kTemp < m) {
                list.add(vulnerability[i+kTemp]);
                kTemp++;
            }

            Collections.sort(list);
            res[i] = list.get(k-1);
            list.clear();
        }
        return res;
    }
}
